name: Validate & Publish
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  validate:
    strategy:
      matrix:
        include:
          - name: Linux-U18
            os: ubuntu-latest
            container: ubuntu:18.04
          - name: Linux-U20
            os: ubuntu-20.04
          - name: Linux-U22
            os: ubuntu-22.04
          - name: Linux-U24
            os: ubuntu-24.04
          - name: MacOS
            os: macOS-latest
          - name: Windows
            os: windows-latest
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    env:
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
    steps:
      - name: Install Dependencies
        run: |
          set -e
          apt update && apt upgrade -y
          apt install -y curl libicu-dev git
          curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
          apt install -y nodejs
          node -v && npm -v
        if: matrix.name == 'Linux-U18'
        
      - uses: actions/checkout@v3

      - name: Install Redis
        run: bash ./RedisCore.Tests/install_redis_debian.sh
        if: runner.os == 'Linux'

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            8.0.x
            9.0.x

      - name: Build
        run: dotnet build -c ${{ vars.CONFIGURATION }}

      - name: Test
        run: dotnet test -c ${{ vars.CONFIGURATION }} --no-build --logger trx --results-directory "TestResults-${{ matrix.name }}"
        env:
          AZURE_REDIS_HOST: ${{ secrets.AZURE_REDIS_HOST }}
          AZURE_REDIS_PWD: ${{ secrets.AZURE_REDIS_PWD }}

      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.name }}
          path: TestResults-${{ matrix.name }}
        if: always()

  publish:
    if: success() && (vars.PUBLISH == 'true' || vars.PUBLISH == 'auto' && github.ref_name == 'master')
    needs:
      - validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Build
        run: dotnet build -c ${{ vars.CONFIGURATION }}

      - name: Pack
        run: dotnet pack ./RedisCore/RedisCore.csproj -c ${{ vars.CONFIGURATION }} --no-build --version-suffix "${{ fromJSON(format('["-beta-{0}", ""]', github.run_number))[github.ref_name == 'master'] }}"

      - name: Push
        run: dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
